[{"/Users/tongwen/Documents/training/final-project/final-project-client/src/index.js":"1","/Users/tongwen/Documents/training/final-project/final-project-client/src/App.js":"2","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/root.reducer.js":"3","/Users/tongwen/Documents/training/final-project/final-project-client/src/Login.js":"4","/Users/tongwen/Documents/training/final-project/final-project-client/src/Registration.js":"5","/Users/tongwen/Documents/training/final-project/final-project-client/src/Footer.js":"6","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/auth.action.js":"7","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/auth.reducer.js":"8","/Users/tongwen/Documents/training/final-project/final-project-client/src/Header.js":"9","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/insurances.action.js":"10","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/insurance.reducer.js":"11","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/user_detail.reducer.js":"12","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/user_detail.action.js":"13","/Users/tongwen/Documents/training/final-project/final-project-client/src/Account.js":"14","/Users/tongwen/Documents/training/final-project/final-project-client/src/Greetings.js":"15","/Users/tongwen/Documents/training/final-project/final-project-client/src/Logout.js":"16","/Users/tongwen/Documents/training/final-project/final-project-client/src/auth.hoc.js":"17","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/provider.reducer.js":"18","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/providers.action.js":"19","/Users/tongwen/Documents/training/final-project/final-project-client/src/Provider.js":"20","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/user.action.js":"21","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/user.reducer.js":"22","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/specialty.reducer.js":"23","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/specialty.action.js":"24","/Users/tongwen/Documents/training/final-project/final-project-client/src/providerCard.js":"25","/Users/tongwen/Documents/training/final-project/final-project-client/src/Plans.js":"26","/Users/tongwen/Documents/training/final-project/final-project-client/src/PlanCard.js":"27","/Users/tongwen/Documents/training/final-project/final-project-client/src/ProviderCard.js":"28","/Users/tongwen/Documents/training/final-project/final-project-client/src/UserDetailProviderCard.js":"29","/Users/tongwen/Documents/training/final-project/final-project-client/src/adminAccount.js":"30","/Users/tongwen/Documents/training/final-project/final-project-client/src/ProviderTable.js":"31","/Users/tongwen/Documents/training/final-project/final-project-client/src/AdminLogin.js":"32","/Users/tongwen/Documents/training/final-project/final-project-client/src/AddPlan.js":"33","/Users/tongwen/Documents/training/final-project/final-project-client/src/ProviderLogin.js":"34","/Users/tongwen/Documents/training/final-project/final-project-client/src/ProviderRegistration.js":"35","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/comment.reducer.js":"36","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/comment.action.js":"37","/Users/tongwen/Documents/training/final-project/final-project-client/src/ProviderAccount.js":"38","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/provider_detail.reducer.js":"39","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/provider_detail.action.js":"40","/Users/tongwen/Documents/training/final-project/final-project-client/src/Home.js":"41"},{"size":755,"mtime":1611886691174,"results":"42","hashOfConfig":"43"},{"size":1591,"mtime":1612507666424,"results":"44","hashOfConfig":"43"},{"size":848,"mtime":1612499120385,"results":"45","hashOfConfig":"43"},{"size":6054,"mtime":1612422904990,"results":"46","hashOfConfig":"43"},{"size":6502,"mtime":1612421357117,"results":"47","hashOfConfig":"43"},{"size":2922,"mtime":1611394971489,"results":"48","hashOfConfig":"43"},{"size":983,"mtime":1611696014802,"results":"49","hashOfConfig":"43"},{"size":877,"mtime":1612512890297,"results":"50","hashOfConfig":"43"},{"size":822,"mtime":1612506009932,"results":"51","hashOfConfig":"43"},{"size":658,"mtime":1612515205950,"results":"52","hashOfConfig":"43"},{"size":862,"mtime":1611570585501,"results":"53","hashOfConfig":"43"},{"size":1036,"mtime":1612061352097,"results":"54","hashOfConfig":"43"},{"size":1099,"mtime":1612059980192,"results":"55","hashOfConfig":"43"},{"size":9363,"mtime":1612493062253,"results":"56","hashOfConfig":"43"},{"size":590,"mtime":1612512956223,"results":"57","hashOfConfig":"43"},{"size":864,"mtime":1612513181865,"results":"58","hashOfConfig":"43"},{"size":1098,"mtime":1611927353398,"results":"59","hashOfConfig":"43"},{"size":1436,"mtime":1612424336816,"results":"60","hashOfConfig":"43"},{"size":963,"mtime":1612376666390,"results":"61","hashOfConfig":"43"},{"size":5531,"mtime":1612493549829,"results":"62","hashOfConfig":"43"},{"size":619,"mtime":1612409741782,"results":"63","hashOfConfig":"43"},{"size":255,"mtime":1611663440549,"results":"64","hashOfConfig":"43"},{"size":277,"mtime":1611748798733,"results":"65","hashOfConfig":"43"},{"size":249,"mtime":1611748920680,"results":"66","hashOfConfig":"43"},{"size":2053,"mtime":1611880103376,"results":"67","hashOfConfig":"43"},{"size":2096,"mtime":1612505151482,"results":"68","hashOfConfig":"43"},{"size":3616,"mtime":1612505151464,"results":"69","hashOfConfig":"43"},{"size":7379,"mtime":1612493761478,"results":"70","hashOfConfig":"43"},{"size":2993,"mtime":1612421949164,"results":"71","hashOfConfig":"43"},{"size":4666,"mtime":1612409741776,"results":"72","hashOfConfig":"43"},{"size":3861,"mtime":1612489415383,"results":"73","hashOfConfig":"43"},{"size":5173,"mtime":1612494098635,"results":"74","hashOfConfig":"43"},{"size":9017,"mtime":1612515039528,"results":"75","hashOfConfig":"43"},{"size":5090,"mtime":1612499520158,"results":"76","hashOfConfig":"43"},{"size":6482,"mtime":1612410472113,"results":"77","hashOfConfig":"43"},{"size":512,"mtime":1612486615161,"results":"78","hashOfConfig":"43"},{"size":473,"mtime":1612484546997,"results":"79","hashOfConfig":"43"},{"size":10071,"mtime":1612511059964,"results":"80","hashOfConfig":"43"},{"size":797,"mtime":1612504058349,"results":"81","hashOfConfig":"43"},{"size":829,"mtime":1612499120421,"results":"82","hashOfConfig":"43"},{"size":946,"mtime":1612506950974,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"13mcueh",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/Users/tongwen/Documents/training/final-project/final-project-client/src/index.js",[],["185","186"],"/Users/tongwen/Documents/training/final-project/final-project-client/src/App.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/root.reducer.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/Login.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/Registration.js",["187","188"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {CssBaseline, makeStyles, TextField, withStyles} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport {Alert} from \"@material-ui/lab\"\nimport {connect} from \"react-redux\";\nimport {signup} from \"./actions/user.action\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nconst styles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass Signup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            new_user: {\n                username: '',\n                password: '',\n                repeat_password: ''\n            },\n            isPasswordValid: true,\n            isModelVisible: false,\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let new_user = {\n            username: this.state.new_user[\"username\"],\n            password: this.state.new_user[\"password\"],\n            profiles: [\n                {\n                    id: 2\n                }\n            ]\n        }\n\n\n        if (this.state.isPasswordValid) {\n            this.props.signup(new_user, (res) => {\n                if (res.data) {\n                    this.props.history.push('/login');\n                } else {\n                    alert(\"something error please try again!\")\n                }\n            });\n        } else {\n            alert(\"Password is not valid!\")\n        }\n    };\n\n    handleChange(event) {\n        let {name, value} = event.target;\n        this.state.new_user[name] = value;\n        this.setState({\n            new_user: this.state.new_user\n        });\n\n        if (this.state.new_user[\"password\"] !== this.state.new_user[\"repeat_password\"]) {\n            this.setState({isPasswordValid: false});\n        } else {\n            this.setState({isPasswordValid: true});\n        }\n\n        console.log(this.state.new_user);\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        let checkPassword = !this.state.isPasswordValid && <Alert severity=\"error\">Passwords are not same!</Alert>\n        let checkSuccessful = this.state.isModelVisible && <Alert severity=\"error\">Something error happens, please try again!</Alert>\n        return (\n            <div>\n                <Header />\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign up\n                        </Typography>\n                        <form className={classes.form} onSubmit={this.handleSubmit.bind(this)} noValidate>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"username\"\n                                        label=\"Username\"\n                                        name=\"username\"\n                                        autoComplete=\"username\"\n                                        autoFocus\n                                        onChange={this.handleChange.bind(this)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        id=\"password\"\n                                        autoComplete=\"current-password\"\n                                        onChange={this.handleChange.bind(this)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        name=\"repeat_password\"\n                                        label=\"Repeat Password\"\n                                        type=\"password\"\n                                        id=\"repeat_password\"\n                                        autoComplete=\"current-password\"\n                                        onChange={this.handleChange.bind(this)}\n                                    />\n                                </Grid>\n                            </Grid>\n                            {checkPassword}\n                            {checkSuccessful}\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                Signup\n                            </Button>\n                        </form>\n                    </div>\n                </Container>\n                <Footer />\n            </div>\n\n        );\n    }\n}\nexport default withStyles(styles, { withTheme: true })(connect(null, {signup})(Signup));\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/Footer.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/auth.action.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/auth.reducer.js",["189"],"/Users/tongwen/Documents/training/final-project/final-project-client/src/Header.js",["190","191"],"import Greeting from \"./Greetings\";\nimport {useSelector} from \"react-redux\";\nimport LoginControl from \"./Greetings\";\n\nfunction Header() {\n    return (\n        <header\n            className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n            <p className=\"h5 my-0 me-md-auto fw-normal\">Company name</p>\n            <nav className=\"my-2 my-md-0 me-md-3 justify-content-end\">\n                <a className=\"p-2 text-dark\" href=\"/home\">Home</a>\n                <a className=\"p-2 text-dark\" href=\"/providers\">Find Care</a>\n                <a className=\"p-2 text-dark\" href=\"/account\">My Account</a>\n                <a className=\"p-2 text-dark\" href=\"/plans\">Plans</a>\n            </nav>\n            <LoginControl />\n        </header>\n    )\n}\nexport default Header;\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/insurances.action.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/insurance.reducer.js",["192"],"import {GET_INSURANCES, SORT_INSURANCES} from \"../actions/insurances.action\";\n\nexport default function insurancesReducer(oldState = null, action) {\n    switch (action.type) {\n        case GET_INSURANCES:\n            return action.payload.data;\n\n        case SORT_INSURANCES:\n            switch (action.payload) {\n                case \"rate\":\n                    oldState.sort((a, b) => a.monthlyRate - b.monthlyRate);\n                    break;\n                case \"deductible\":\n                    oldState.sort((a, b) => a.deductible - b.deductible);\n                    break;\n                case \"maximum\":\n                    oldState.sort((a, b) => a.outOfPocketMaximum - b.outOfPocketMaximum);\n                    break;\n            }\n            console.log(oldState);\n            return oldState;\n        default:\n            return oldState;\n    }\n}\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/user_detail.reducer.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/user_detail.action.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/Account.js",["193","194"],"import React from 'react';\nimport {deleteProviderFromHealthTeam, getCurrentUserDetail, updateUserDetail} from \"./actions/user_detail.action\";\nimport {connect} from \"react-redux\";\nimport {checkLogin} from \"./actions/auth.action\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport {TextField} from \"@material-ui/core\";\nimport UserDetailProviderCard from \"./UserDetailProviderCard\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport PlanCard from \"./PlanCard\";\n\nclass Account extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editUserDetail: {\n                id: 0,\n                firstName: \"\",\n                lastName: \"\",\n                phone: \"\",\n                email: \"\",\n                address1: \"\",\n                address2: \"\",\n                city: \"\",\n                state: \"\",\n                zip: \"\",\n                insurance: {},\n                myHealthTeam: []\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.loggedIn) {\n            this.props.checkLogin()\n                .then(() => {\n                    if (this.props.loggedIn) {\n                        this.props.getCurrentUserDetail(this.props.loggedIn.id)\n                            .then(() => {\n                                this.setState({\n                                    editUserDetail: this.props.userDetail\n                                })\n                            });\n                    } else {\n                        this.props.history.push(\"/login\");\n                    }\n                });\n        }\n\n    }\n\n    handleConfirmClick(event) {\n        this.props.updateUserDetail(this.state.editUserDetail);\n        this.setState({\n            editUserDetail: this.props.userDetail\n        })\n    }\n\n    handleCancelClick(event) {\n        this.state.editUserDetail[\"insurance\"] = null;\n        this.setState({\n            editUserDetail: this.state.editUserDetail\n        });\n    }\n\n    handleFieldChange(event) {\n        const {name, value} = event.target;\n        this.state.editUserDetail[name] = value;\n        this.setState({\n            editUserDetail: this.state.editUserDetail\n        })\n    }\n\n    render() {\n        let name = this.props.userDetail && this.props.userDetail.firstName + \" \" + this.props.userDetail.lastName;\n        let profile = this.props.userDetail && <div className=\"container\">\n            <h2 align=\"center\">{name}'s Account</h2>\n            <Grid container spacing={5} alignItems=\"center\" justify=\"center\">\n                <Grid item md={6}>\n                    {<TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"firstName\"\n                        label=\"First Name\"\n                        name=\"firstName\"\n                        color=\"warning\"\n                        value={this.state.editUserDetail.firstName}\n                        onChange={this.handleFieldChange.bind(this)}\n                    />}\n                </Grid>\n                <Grid item md={6}>\n                    {<TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"lastName\"\n                        label=\"Last Name\"\n                        name=\"lastName\"\n                        color=\"warning\"\n                        value={this.state.editUserDetail.lastName}\n                        onChange={this.handleFieldChange.bind(this)}\n                    />}\n                </Grid>\n                <Grid item md={6}>\n                    {<TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"phone\"\n                        label=\"Phone\"\n                        name=\"phone\"\n                        color=\"warning\"\n                        value={this.state.editUserDetail.phone}\n                        onChange={this.handleFieldChange.bind(this)}\n                    />}\n                </Grid>\n                <Grid item md={6}>\n                    {<TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        color=\"warning\"\n                        value={this.state.editUserDetail.email}\n                        onChange={this.handleFieldChange.bind(this)}\n                    />}\n                </Grid>\n                <Grid item md={12}>\n                    {<TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"address1\"\n                        label=\"Address1\"\n                        name=\"address1\"\n                        color=\"warning\"\n                        value={this.state.editUserDetail.address1}\n                        onChange={this.handleFieldChange.bind(this)}\n                    />}\n                </Grid>\n                <Grid item md={12}>\n                    {<TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"address2\"\n                        label=\"Address2\"\n                        name=\"address2\"\n                        color=\"warning\"\n                        value={this.state.editUserDetail.address2}\n                        onChange={this.handleFieldChange.bind(this)}\n                    />}\n                </Grid>\n                <Grid item md={4}>\n                    {<TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"city\"\n                        label=\"City\"\n                        name=\"city\"\n                        color=\"warning\"\n                        value={this.state.editUserDetail.city}\n                        onChange={this.handleFieldChange.bind(this)}\n                    />}\n                </Grid>\n                <Grid item md={4}>\n                    {<TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"state\"\n                        label=\"State\"\n                        name=\"state\"\n                        color=\"warning\"\n                        value={this.state.editUserDetail.state}\n                        onChange={this.handleFieldChange.bind(this)}\n                    />}\n                </Grid>\n                <Grid item md={4}>\n                    {<TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"zip\"\n                        label=\"Zip\"\n                        name=\"zip\"\n                        color=\"warning\"\n                        value={this.state.editUserDetail.zip}\n                        onChange={this.handleFieldChange.bind(this)}\n                    />}\n                </Grid>\n                <Grid item md={12}>\n                    <h4 align=\"center\">My Plan:</h4>\n                </Grid>\n                <Grid item md={12}>\n                    {this.props.userDetail.insurance ? <PlanCard plan={this.props.userDetail.insurance} show={false}></PlanCard> : \"\"}\n                </Grid>\n                <Grid container md={6} alignItems=\"center\" justify=\"center\">\n                    {this.props.userDetail.insurance ? <a className=\"btn btn-warning\" href=\"/plans\">CHANGE</a> : \"\"}\n                </Grid>\n                <Grid container md={6} alignItems=\"center\" justify=\"center\">\n                    {this.props.userDetail.insurance ? <button className=\"btn btn-danger\"\n                                                               onClick={this.handleCancelClick.bind(this)}\n                    >CANCEL\n                    </button> : \"\"}\n                </Grid>\n                <Grid item md={12}>\n                    <h4 align=\"center\">My Health Team:</h4>\n                </Grid>\n                {\n                    this.state.editUserDetail.myHealthTeam.map(p => {\n                        return <Grid item md={5}>\n                            <UserDetailProviderCard provider={p} history={this.props.history}/>\n                        </Grid>;\n                    })\n                }\n\n                <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleConfirmClick.bind(this)}\n                >\n                    Confirm\n                </Button>\n            </Grid>\n        </div>;\n\n        return (\n            <React.Fragment>\n                <Header />\n                {profile}\n                <Footer />\n            </React.Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(appState) {\n    return {\n        userDetail: appState.userDetail,\n        loggedIn: appState.loggedIn\n    };\n}\n\nexport default connect(mapStateToProps, {\n    getCurrentUserDetail,\n    checkLogin,\n    updateUserDetail,\n    deleteProviderFromHealthTeam\n})(Account);\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/Greetings.js",["195"],"/Users/tongwen/Documents/training/final-project/final-project-client/src/Logout.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/auth.hoc.js",["196","197"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {checkLogin} from \"./actions/auth.action\";\r\n\r\nexport default function (ExistingComponent) {\r\n\r\n    class WrapperHOCComponent extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {};\r\n        }\r\n\r\n        static getDerivedStateFromProps(props, state) {\r\n            if (!props.loggedIn) {\r\n                props.checkLogin()\r\n                    .then(() => {\r\n                        if (props.loggedIn) {\r\n                            return state;\r\n                        } else {\r\n                            props.history.push(\"/login\");\r\n                            return state;\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <ExistingComponent {...this.props} />\r\n            );\r\n        }\r\n    }\r\n\r\n    function mapStateToProps({loggedIn}) {\r\n        return {loggedIn};\r\n    }\r\n\r\n    return connect(mapStateToProps, {checkLogin})(WrapperHOCComponent);\r\n}\r\n",["198","199"],"/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/provider.reducer.js",["200"],"import {\n    FILTER_PROVIDERS_BY_NAME,\n    FILTER_PROVIDERS_BY_TYPE,\n    GET_PROVIDERS,\n    UPDATE_PROVIDER_DETAIL\n} from \"../actions/providers.action\";\n\nexport default function providerReducer(oldState = null, action) {\n    let response;\n    switch (action.type) {\n        case GET_PROVIDERS:\n            return action.payload.data;\n        case FILTER_PROVIDERS_BY_TYPE:\n            let type = action.payload;\n            if (type === \"NULL\") {\n                return oldState;\n            }\n            return oldState.filter(x => x.specialty !== null).filter(x => x.specialty.type === type);\n        case FILTER_PROVIDERS_BY_NAME:\n            let name = action.payload;\n            if (name === \"NULL\") {\n                return oldState;\n            }\n\n            return oldState.filter(x => x.specialty !== null).filter(x => {\n                return x.firstName.toLowerCase().indexOf(name.toLowerCase()) >= 0\n                    || x.lastName.toLowerCase().indexOf(name.toLowerCase()) >= 0;\n            });\n\n        case UPDATE_PROVIDER_DETAIL:\n            response = action.payload.data;\n            if (response.success) {\n                const updatedDetail = response.providerDetail;\n                const index = oldState.findIndex(d => d.id === updatedDetail.id);\n                oldState.splice(index, 1, updatedDetail);\n                return oldState;\n            }\n\n        default:\n            return oldState;\n    }\n}\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/providers.action.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/Provider.js",["201","202","203"],"import React from 'react';\nimport {filterProvidersByName, filterProvidersByType, getProviders} from \"./actions/providers.action\";\nimport {connect} from \"react-redux\";\nimport {BottomNavigation, BottomNavigationAction, Container, makeStyles, TextField} from \"@material-ui/core\";\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {getSpecialty} from \"./actions/specialty.action\";\nimport providerCard from \"./ProviderCard\";\nimport ProviderCard from \"./ProviderCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport {getComments} from \"./actions/comment.action\";\nimport {getCurrentUserDetail} from \"./actions/user_detail.action\";\nimport {checkLogin} from \"./actions/auth.action\";\n\nclass Provider extends React.Component {\n    ;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            option: \"reset\",\n            typeValue: \"\",\n            nameValue: \"\",\n            provider: []\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.providers === null) {\n            this.props.getProviders();\n        }\n\n        if (this.props.specialties === null) {\n            this.props.getSpecialty();\n        }\n\n        if (this.props.comments === null) {\n            this.props.getComments();\n        }\n\n        if (this.props.loggedIn === null) {\n            this.props.checkLogin();\n        }\n\n        if (this.props.userDetail === null) {\n            this.props.getCurrentUserDetail();\n        }\n    }\n\n    handleChange = (event, value) => {\n        this.setState({\n            option: value\n        })\n    }\n\n    handleAutoCompleteChange = (event, value) => {\n        this.props.getProviders()\n            .then(() => {\n                this.setState({\n                    typeValue: value\n                }, () => {\n                    this.props.filterProvidersByType(this.state.typeValue === null ? \"NULL\" : this.state.typeValue.type);\n                });\n            });\n\n    }\n\n    handleTextFieldChange = (event) => {\n        let {value} = event.target;\n        this.props.getProviders()\n            .then(() => {\n                this.setState({\n                    nameValue: value\n                }, () => {\n                    this.props.filterProvidersByName(this.state.nameValue === null ? \"NULL\" : this.state.nameValue);\n                });\n            });\n    }\n\n    render() {\n        const {value} = this.state;\n\n        let findByType = this.state.option === \"type\" && this.props.specialties && <Autocomplete\n            id=\"combo-box-demo\"\n            options={this.props.specialties}\n            getOptionLabel={(option) => option.type}\n            style={{width: 300}}\n            onChange={this.handleAutoCompleteChange}\n            renderInput={(params) => <TextField {...params} label=\"Find By Type\" variant=\"outlined\"/>}\n        />\n\n        let findByName = this.state.option === \"name\" && <TextField\n            id=\"standard-basic\"\n            label=\"Find By Name\"\n            variant=\"outlined\"\n            onChange={this.handleTextFieldChange.bind(this)}/>\n\n        return (\n            <React.Fragment>\n                <Header/>\n                <Container>\n                    <BottomNavigation\n                        value={value}\n                        onChange={this.handleChange}\n                        showLabels\n                    >\n                        <BottomNavigationAction label=\"Find By Type\" value=\"type\" icon={<LocalHospitalIcon/>}/>\n                        <BottomNavigationAction label=\"Find By Name\" value=\"name\" icon={<AccountBoxIcon/>}/>\n                    </BottomNavigation>\n                    {findByType}\n                    {findByName}\n                    <Grid container spacing={5} alignItems='center' justify='center'>\n                        {\n                            this.props.providers && this.props.providers.filter(p => p.verified).map(provider => {\n                                return (\n                                    <Grid item md={6}>\n                                        <ProviderCard provider={provider} comments={\n                                            this.props.comments\n                                            && this.props.comments.filter(c => c.providerDetail.id === provider.id)\n                                        } color={this.props.userDetail\n                                        && this.props.userDetail.myHealthTeam.findIndex(c => c.id === provider.id) >= 0 ?\n                                        \"secondary\" : \"action\"} history={this.props.history}\n                                        ></ProviderCard>\n                                    </Grid>\n                                )\n                            })\n                        }\n                    </Grid>\n                </Container>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(appState) {\n    return {\n        providers: appState.providers,\n        specialties: appState.specialties,\n        comments: appState.comments,\n        loggedIn: appState.loggedIn,\n        userDetail: appState.userDetail\n    };\n}\n\nexport default connect(mapStateToProps, {\n    getProviders,\n    getSpecialty,\n    filterProvidersByType,\n    filterProvidersByName,\n    getComments,\n    checkLogin,\n    getCurrentUserDetail\n})(Provider);\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/user.action.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/user.reducer.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/specialty.reducer.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/specialty.action.js",["204"],"import axios from \"axios\";\n\nexport const GET_SPECIALTY = \"GET_SPECIALTY\";\n\nexport function getSpecialty() {\n    const promise = axios.get('http://localhost:8080/specialty');\n    return {\n        type: GET_SPECIALTY,\n        payload: promise\n    }\n}\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/providerCard.js",["205","206","207"],"import {Card, CardActions, CardContent, CardHeader, IconButton} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport default function providerCard(provider) {\n\n    const name = provider.firstName + \" \" + provider.lastName;\n    const subheader = provider.address1 + \" \" + provider.address2 + \",\" + provider.city + \",\" + provider.state + \",\"\n        + provider.zip + \" | \" + provider.phone + \" | \" + provider.specialty.type\n\n    return (\n        <Card>\n            <CardHeader\n                title={name}\n                subheader={subheader}\n            />\n            <CardActions disableSpacing>\n                <IconButton aria-label=\"add to my health team\">\n                    <FavoriteIcon />\n                </IconButton>\n            </CardActions>\n        </Card>\n    );\n}\n",["208","209"],"/Users/tongwen/Documents/training/final-project/final-project-client/src/Plans.js",["210"],"import React from 'react';\nimport {getInsurances, sortInsurances} from \"./actions/insurances.action\";\nimport {connect} from \"react-redux\";\nimport PlanCard from \"./PlanCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Container, CssBaseline} from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nclass Plans extends React.Component {\n\n    componentDidMount() {\n        if (this.props.insurances === null) {\n            this.props.getInsurances();\n        }\n    }\n\n    handleSelectChange(event) {\n        this.props.sortInsurances(event.target.value);\n        this.forceUpdate();\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <Container>\n                    <Grid container spacing={5}>\n                        <Grid item md={8}>\n                            <select className=\"form-select\" aria-label=\"Default select example\" onChange={this.handleSelectChange.bind(this)}>\n                                <option selected>Sort by</option>\n                                <option value=\"rate\">Rate: low to high</option>\n                                <option value=\"deductible\">Deductible: low to high</option>\n                                <option value=\"maximum\">Maximum: low to high</option>\n                            </select>\n                        </Grid>\n                        {\n                            this.props.insurances && this.props.insurances.map(insurance => {\n                                return (\n                                    <Grid item md={8}>\n                                        <PlanCard plan={insurance} show={true}/>\n                                    </Grid>\n                                );\n                            })\n                        }\n                    </Grid>\n                </Container>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(appState) {\n    return {\n        insurances: appState.insurances\n    }\n}\nexport default connect(mapStateToProps, {getInsurances, sortInsurances})(Plans);\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/PlanCard.js",["211","212"],"import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport {Divider, makeStyles, withStyles} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {connect} from \"react-redux\";\nimport {checkLogin} from \"./actions/auth.action\";\nimport {getCurrentUserDetail, updateUserDetail} from \"./actions/user_detail.action\";\n\nconst styles = theme => ({\n    root: {\n        borderRadius: 12,\n        minWidth: 256,\n        textAlign: 'center',\n    },\n    header: {\n        textAlign: 'center',\n        spacing: 10,\n    },\n    list: {\n        padding: '20px',\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    action: {\n        display: 'flex',\n        justifyContent: 'space-around',\n    },\n});\n\nclass PlanCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick(event) {\n        if (!this.props.loggedIn) {\n            this.props.checkLogin();\n        }\n        if (!this.props.loggedIn) {\n            alert(\"Please log in\");\n        } else {\n            this.props.getCurrentUserDetail(this.props.loggedIn.id)\n                .then(() => {\n                    const insurance = this.props.userDetail.insurance;\n                    if (insurance && insurance.id === this.props.plan.id) {\n                        alert(\"You already enrolled in this plan\");\n                    } else {\n                        const editUserDetail = this.props.userDetail;\n                        editUserDetail.insurance = this.props.plan;\n                        this.props.updateUserDetail(editUserDetail);\n                        alert(\"Successful!\");\n                    }\n                });\n\n        }\n    }\n\n    render() {\n        const name = this.props.plan.type;\n        const outOfPocketMaximum = this.props.plan.outOfPocketMaximum;\n        const deductible = this.props.plan.deductible;\n        const monthlyRate = this.props.plan.monthlyRate;\n        const {classes} = this.props;\n\n        return (\n            <Card className={classes.root}>\n                <CardHeader title={name} align=\"center\" className={classes.header}/>\n                <Divider variant=\"middle\"/>\n                <CardContent>\n                    <Typography variant=\"h6\" align=\"center\">\n                        Monthly Rate: $ {monthlyRate}\n                    </Typography>\n                    <div className={styles.list}>\n                        <Typography align=\"center\">Out Of Pocket Maximum: {outOfPocketMaximum}</Typography>\n                        <Typography align=\"center\">Deductible: {deductible}</Typography>\n                    </div>\n                </CardContent>\n                <Divider variant=\"middle\"/>\n                <CardActions className={classes.action}>\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button}\n                            onClick={this.handleClick.bind(this)}>\n                        CHOOSE\n                    </Button>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nfunction mapStateToProps(appState) {\n    return {\n        loggedIn: appState.loggedIn,\n        userDetail: appState.userDetail\n    };\n}\n\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps, {\n    checkLogin,\n    getCurrentUserDetail,\n    updateUserDetail\n})(PlanCard));\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/ProviderCard.js",["213","214","215"],"import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {blue, red} from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport {CardActions, Collapse, TextField, withStyles} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {checkLogin} from \"./actions/auth.action\";\nimport {getCurrentUserDetail, updateUserDetail} from \"./actions/user_detail.action\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from \"clsx\";\nimport {addComment, getComments} from \"./actions/comment.action\";\n\nconst useStyles = (theme) => ({\n    root: {\n        maxWidth: 600,\n        alignItems: 'center'\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: blue[500],\n    },\n});\n\nclass ProviderCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: false,\n            comment: \"\",\n            comments: this.props.comments,\n            color: this.props.color\n        };\n    }\n\n    componentDidMount() {\n        if (!this.props.loggedIn) {\n            this.props.checkLogin();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            comments: nextProps.comments,\n            color: nextProps.color\n        });\n    }\n\n    handleFieldChange(event) {\n        const {value} = event.target;\n        this.state.comment = value;\n        this.setState({\n            comment: this.state.comment\n        })\n    }\n\n    handleExpandClick = () => {\n        this.setState({\n            expanded: !this.state.expanded\n        });\n    }\n\n    handleCommentClick(event) {\n        let today = new Date();\n        let time = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" +today.getHours()\n            + ':' + today.getMinutes();\n\n        const newComment = {\n            text: this.state.comment,\n            time: time,\n            user: {\n                id: this.props.loggedIn.id\n            },\n            providerDetail: {\n                id: this.props.provider.id\n            }\n        }\n        this.props.addComment(newComment);\n        this.setState({\n            comment: \"\"\n        })\n    }\n\n    handleClick(event) {\n        if (!this.props.loggedIn) {\n            this.props.checkLogin();\n        }\n        if (!this.props.loggedIn) {\n            alert(\"Please log in\");\n        } else {\n            this.props.getCurrentUserDetail(this.props.loggedIn.id)\n                .then(() => {\n                    const healthTeam = this.props.userDetail.myHealthTeam;\n                    const index = healthTeam.findIndex(p => p.id === this.props.provider.id);\n                    if (index >= 0) {\n                        alert(this.props.provider.firstName + \" \" + this.props.provider.lastName\n                            + \" is already in your health team.\");\n                    } else {\n                        const editUserDetail = this.props.userDetail;\n                        editUserDetail.myHealthTeam.push(this.props.provider);\n                        this.props.updateUserDetail(editUserDetail);\n                        alert(\"Successful!\");\n                    }\n                });\n        }\n\n\n    }\n\n    render() {\n        const {classes} = this.props;\n        const name = this.props.provider.firstName + \" \" + this.props.provider.lastName;\n        const subheader = this.props.provider.specialty.type;\n        const body = this.props.provider.address2 + \" \" + this.props.provider.address1 + \",\" + this.props.provider.city\n            + \",\" + this.props.provider.state + \",\" + this.props.provider.zip + \" | \" + this.props.provider.phone\n\n        return (\n            <Card className={classes.root}>\n                <CardHeader\n                    avatar={\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                            P\n                        </Avatar>\n                    }\n                    action={\n                        <IconButton aria-label=\"add to favorites\">\n                            <FavoriteIcon color=\"secondary\" onClick={this.handleClick.bind(this)}/>\n                        </IconButton>\n                    }\n                    title={name}\n                    subheader={subheader}\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {body}\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: this.state.expanded,\n                        })}\n                        onClick={this.handleExpandClick}\n                        aria-expanded={this.state.expanded}\n                        aria-label=\"show more\"\n                    >\n                        <ExpandMoreIcon />\n                    </IconButton>\n                </CardActions>\n                <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        {\n                            this.state.comments && this.state.comments.map(c => {\n                                    return <Typography paragraph>\n                                        {c.user.username} - {c.time} : {c.text}\n                                    </Typography>\n                                })\n                        }\n                        {\n                            this.props.loggedIn && <Typography>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    fullWidth\n                                    id=\"city\"\n                                    label=\"Your Comment\"\n                                    name=\"comment\"\n                                    color=\"warning\"\n                                    value={this.state.comment}\n                                    autoFocus\n                                    onChange={this.handleFieldChange.bind(this)}\n                                />\n                                <button className=\"btn btn-outline-primary\" onClick={this.handleCommentClick.bind(this)}>COMMENT</button>\n                            </Typography>\n                        }\n                    </CardContent>\n                </Collapse>\n            </Card>\n        );\n    }\n}\n\nfunction mapStateToProps(appState) {\n    return {\n        loggedIn: appState.loggedIn,\n        userDetail: appState.userDetail\n    };\n}\n\nexport default withStyles(useStyles)(connect(mapStateToProps, {\n    checkLogin,\n    getCurrentUserDetail,\n    updateUserDetail,\n    addComment\n})(ProviderCard));\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/UserDetailProviderCard.js",["216","217"],"import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {blue, red} from '@material-ui/core/colors';\nimport {withStyles} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {checkLogin} from \"./actions/auth.action\";\nimport {deleteProviderFromHealthTeam, getCurrentUserDetail, updateUserDetail} from \"./actions/user_detail.action\";\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst useStyles = (theme) => ({\n    root: {\n        maxWidth: 500,\n    },\n    avatar: {\n        backgroundColor: blue[500],\n    },\n});\n\nclass UserDetailProviderCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick(event) {\n        // event.preventDefault();\n        if (!this.props.loggedIn) {\n            this.props.checkLogin();\n        }\n        this.props.getCurrentUserDetail(this.props.loggedIn.id)\n            .then(() => {\n                this.props.deleteProviderFromHealthTeam(this.props.userDetail.id, this.props.provider);\n            });\n    }\n\n    render() {\n        const {classes} = this.props;\n        const name = this.props.provider.firstName + \" \" + this.props.provider.lastName;\n        const subheader = this.props.provider.specialty.type;\n        const body = this.props.provider.address2 + \" \" + this.props.provider.address1 + \",\" + this.props.provider.city\n            + \",\" + this.props.provider.state + \",\" + this.props.provider.zip + \" | \" + this.props.provider.phone\n\n        return (\n            <Card className={classes.root}>\n                <CardHeader\n                    avatar={\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                            P\n                        </Avatar>\n                    }\n                    action={\n                        <IconButton aria-label=\"add to favorites\" onClick={this.handleClick.bind(this)}>\n                            <CancelIcon color=\"secondary\" />\n                        </IconButton>\n                    }\n                    title={name}\n                    subheader={subheader}\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {body}\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nfunction mapStateToProps(appState) {\n    return {\n        loggedIn: appState.loggedIn,\n        userDetail: appState.userDetail\n    };\n}\n\nexport default withStyles(useStyles)(connect(mapStateToProps, {\n    checkLogin,\n    getCurrentUserDetail,\n    updateUserDetail,\n    deleteProviderFromHealthTeam\n})(UserDetailProviderCard));\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/adminAccount.js",["218"],"import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddIcon from '@material-ui/icons/Add';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport {withStyles} from \"@material-ui/core\";\nimport ProviderTable from \"./ProviderTable\";\nimport {checkLogin} from \"./actions/auth.action\";\nimport {connect} from \"react-redux\";\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing(3),\n    },\n});\n\nclass Dashboard extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (!this.props.loggedIn) {\n            this.props.checkLogin()\n                .then(() => {\n                    let valid = false;\n                    if (this.props.loggedIn) {\n                        this.props.loggedIn.profiles.forEach(p => {\n                            if (p.type === 'admin') {\n                                valid = true;\n                            }\n                        })\n                    }\n\n                    if (!valid) {\n                        this.props.history.push(\"/admin-login\");\n                    }\n                });\n        }\n\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" noWrap>\n                            Admin Management\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    anchor=\"left\"\n                >\n                    <div className={classes.toolbar} />\n                    <Divider />\n                    <List>\n                        <ListItem button key=\"plans\" onClick={() => {\n                            this.props.history.push(\"/add-plan\");\n                        }}>\n                            <ListItemIcon>\n                                <AddIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Add Plan\" />\n                        </ListItem>\n                        <ListItem button key=\"providers\" onClick={() => {\n                            this.props.history.push(\"/admin\");\n                        }}>\n                            <ListItemIcon>\n                                <PeopleOutlineIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Account Verified\" />\n                        </ListItem>\n                        <ListItem button key=\"logout\" onClick={() => {\n                            this.props.history.push(\"/logout\");\n                        }}>\n                            <ListItemIcon>\n                                <PeopleOutlineIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Logout\" />\n                        </ListItem>\n                    </List>\n                    <Divider />\n                </Drawer>\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <ProviderTable history={this.props.history} />\n                </main>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(appState) {\n    return {\n        loggedIn: appState.loggedIn\n    };\n}\n\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps, {checkLogin})(Dashboard));\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/ProviderTable.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/AdminLogin.js",["219","220","221"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Field, reduxForm} from \"redux-form\";\nimport {login} from \"./actions/auth.action\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {CssBaseline, Paper, withStyles} from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst styles = (theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://source.unsplash.com/npxXWgQ33ZQ)',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass AdminLogin extends Component {\n\n    onSubmit = (user) => {\n        this.props.login(user, (res) => {\n            if (res.data.success) {\n                this.props.history.push('/admin');\n            } else {\n                alert(\"Invalid account or password\");\n            }\n        });\n    }\n\n    renderField({input, label, type}) {\n        return (\n            <div className=\"form-group\">\n                <label>\n                    {label}\n                    <input\n                        type={type}\n                        name={input.name}\n                        className=\"form-control\"\n                        {...input}\n                    />\n                </label>\n            </div>\n        )\n    }\n\n    renderCheckbox({input, label, type}) {\n        return (\n            <div className=\"form-check\">\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        name={input.name}\n                        {...input}\n                        className=\"form-check-input\"\n                    />\n                    {label}\n                </label>\n            </div>\n        )\n    }\n\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Grid container component=\"main\" className={classes.root}>\n                    <CssBaseline />\n                    <Grid item xs={false} sm={4} md={7} className={classes.image} />\n                    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                        <div className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlinedIcon />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Admin Sign in\n                            </Typography>\n                            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className={classes.form} noValidate>\n                                <Grid container alignItems=\"center\" justify=\"center\">\n                                    <Field\n                                        name=\"username\"\n                                        label=\"Username\"\n                                        type=\"text\"\n                                        component={this.renderField}\n                                    />\n                                </Grid>\n                                <Grid container alignItems=\"center\" justify=\"center\">\n                                    <Field\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        component={this.renderField}\n                                    />\n                                </Grid>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    Sign In\n                                </Button>\n                            </form>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        initialValues: {\n            username: '',\n            password: ''\n        }\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(connect(mapStateToProps, {login})(\n    reduxForm({\n        form: 'LoginForm'\n    })(AdminLogin))\n);\n\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/AddPlan.js",["222","223","224"],"/Users/tongwen/Documents/training/final-project/final-project-client/src/ProviderLogin.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/ProviderRegistration.js",["225","226","227","228","229"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {CssBaseline, makeStyles, TextField, withStyles} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport {Alert} from \"@material-ui/lab\"\nimport {connect} from \"react-redux\";\nimport {providerSignup, signup} from \"./actions/user.action\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nconst styles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass ProviderRegistration extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            new_user: {\n                username: '',\n                password: '',\n                repeat_password: ''\n            },\n            isPasswordValid: true,\n            isModelVisible: false,\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let new_user = {\n            username: this.state.new_user[\"username\"],\n            password: this.state.new_user[\"password\"],\n            profiles: [\n                {\n                    id: 4\n                }\n            ]\n        }\n\n        if (this.state.isPasswordValid) {\n            this.props.providerSignup(new_user, (res) => {\n                if (res.data) {\n                    this.props.history.push('/provider-login');\n                } else {\n                    alert(\"something error please try again!\")\n                }\n            });\n        } else {\n            alert(\"Password is not valid!\")\n        }\n    };\n\n    handleChange(event) {\n        let {name, value} = event.target;\n        this.state.new_user[name] = value;\n        this.setState({\n            new_user: this.state.new_user\n        });\n\n        if (this.state.new_user[\"password\"] !== this.state.new_user[\"repeat_password\"]) {\n            this.setState({isPasswordValid: false});\n        } else {\n            this.setState({isPasswordValid: true});\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        let checkPassword = !this.state.isPasswordValid && <Alert severity=\"error\">Passwords are not same!</Alert>\n        let checkSuccessful = this.state.isModelVisible && <Alert severity=\"error\">Something error happens, please try again!</Alert>\n        return (\n            <div>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Provider Sign up\n                        </Typography>\n                        <form className={classes.form} onSubmit={this.handleSubmit.bind(this)} noValidate>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"username\"\n                                        label=\"Username\"\n                                        name=\"username\"\n                                        autoComplete=\"username\"\n                                        autoFocus\n                                        onChange={this.handleChange.bind(this)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        id=\"password\"\n                                        autoComplete=\"current-password\"\n                                        onChange={this.handleChange.bind(this)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        name=\"repeat_password\"\n                                        label=\"Repeat Password\"\n                                        type=\"password\"\n                                        id=\"repeat_password\"\n                                        autoComplete=\"current-password\"\n                                        onChange={this.handleChange.bind(this)}\n                                    />\n                                </Grid>\n                            </Grid>\n                            {checkPassword}\n                            {checkSuccessful}\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                Signup\n                            </Button>\n                        </form>\n                    </div>\n                </Container>\n            </div>\n\n        );\n    }\n}\nexport default withStyles(styles, { withTheme: true })(connect(null, {providerSignup})(ProviderRegistration));\n","/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/comment.reducer.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/comment.action.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/ProviderAccount.js",["230","231","232","233"],"/Users/tongwen/Documents/training/final-project/final-project-client/src/reducers/provider_detail.reducer.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/actions/provider_detail.action.js",[],"/Users/tongwen/Documents/training/final-project/final-project-client/src/Home.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":3,"column":22,"nodeType":"240","messageId":"241","endLine":3,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":78,"column":9,"nodeType":"244","endLine":78,"endColumn":28},{"ruleId":"238","severity":1,"message":"245","line":1,"column":22,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"246","line":1,"column":8,"nodeType":"240","messageId":"241","endLine":1,"endColumn":16},{"ruleId":"238","severity":1,"message":"247","line":2,"column":9,"nodeType":"240","messageId":"241","endLine":2,"endColumn":20},{"ruleId":"248","severity":1,"message":"249","line":9,"column":13,"nodeType":"250","messageId":"251","endLine":19,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":62,"column":9,"nodeType":"244","endLine":62,"endColumn":34},{"ruleId":"242","severity":1,"message":"243","line":70,"column":9,"nodeType":"244","endLine":70,"endColumn":34},{"ruleId":"238","severity":1,"message":"252","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":14},{"ruleId":"238","severity":1,"message":"253","line":1,"column":16,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":5,"column":1,"nodeType":"256","endLine":39,"endColumn":2},{"ruleId":"234","replacedBy":"257"},{"ruleId":"236","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":39,"column":9,"nodeType":"261","messageId":"262","endLine":40,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":4,"column":62,"nodeType":"240","messageId":"241","endLine":4,"endColumn":72},{"ruleId":"238","severity":1,"message":"263","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":18},{"ruleId":"238","severity":1,"message":"264","line":10,"column":8,"nodeType":"240","messageId":"241","endLine":10,"endColumn":20},{"ruleId":"238","severity":1,"message":"265","line":2,"column":9,"nodeType":"240","messageId":"241","endLine":2,"endColumn":22},{"ruleId":"238","severity":1,"message":"266","line":1,"column":28,"nodeType":"240","messageId":"241","endLine":1,"endColumn":39},{"ruleId":"238","severity":1,"message":"267","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":18},{"ruleId":"238","severity":1,"message":"268","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":14},{"ruleId":"234","replacedBy":"269"},{"ruleId":"236","replacedBy":"270"},{"ruleId":"238","severity":1,"message":"271","line":6,"column":20,"nodeType":"240","messageId":"241","endLine":6,"endColumn":31},{"ruleId":"238","severity":1,"message":"239","line":7,"column":18,"nodeType":"240","messageId":"241","endLine":7,"endColumn":28},{"ruleId":"272","severity":1,"message":"273","line":37,"column":5,"nodeType":"274","messageId":"275","endLine":39,"endColumn":6},{"ruleId":"238","severity":1,"message":"276","line":8,"column":15,"nodeType":"240","messageId":"241","endLine":8,"endColumn":18},{"ruleId":"238","severity":1,"message":"277","line":16,"column":21,"nodeType":"240","messageId":"241","endLine":16,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":65,"column":9,"nodeType":"244","endLine":65,"endColumn":19},{"ruleId":"238","severity":1,"message":"276","line":8,"column":15,"nodeType":"240","messageId":"241","endLine":8,"endColumn":18},{"ruleId":"272","severity":1,"message":"273","line":26,"column":5,"nodeType":"274","messageId":"275","endLine":28,"endColumn":6},{"ruleId":"272","severity":1,"message":"273","line":47,"column":5,"nodeType":"274","messageId":"275","endLine":49,"endColumn":6},{"ruleId":"238","severity":1,"message":"278","line":11,"column":8,"nodeType":"240","messageId":"241","endLine":11,"endColumn":12},{"ruleId":"238","severity":1,"message":"279","line":12,"column":8,"nodeType":"240","messageId":"241","endLine":12,"endColumn":14},{"ruleId":"238","severity":1,"message":"280","line":13,"column":8,"nodeType":"240","messageId":"241","endLine":13,"endColumn":14},{"ruleId":"238","severity":1,"message":"281","line":15,"column":8,"nodeType":"240","messageId":"241","endLine":15,"endColumn":21},{"ruleId":"242","severity":1,"message":"243","line":97,"column":13,"nodeType":"244","endLine":97,"endColumn":31},{"ruleId":"242","severity":1,"message":"243","line":99,"column":13,"nodeType":"244","endLine":99,"endColumn":31},{"ruleId":"238","severity":1,"message":"239","line":3,"column":22,"nodeType":"240","messageId":"241","endLine":3,"endColumn":32},{"ruleId":"238","severity":1,"message":"282","line":10,"column":25,"nodeType":"240","messageId":"241","endLine":10,"endColumn":31},{"ruleId":"238","severity":1,"message":"280","line":12,"column":8,"nodeType":"240","messageId":"241","endLine":12,"endColumn":14},{"ruleId":"238","severity":1,"message":"279","line":13,"column":8,"nodeType":"240","messageId":"241","endLine":13,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":77,"column":9,"nodeType":"244","endLine":77,"endColumn":28},{"ruleId":"238","severity":1,"message":"279","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":14},{"ruleId":"238","severity":1,"message":"280","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":79,"column":9,"nodeType":"244","endLine":79,"endColumn":38},{"ruleId":"242","severity":1,"message":"243","line":91,"column":9,"nodeType":"244","endLine":91,"endColumn":38},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'CURRENT_DETAIL' is defined but never used.","'Greeting' is defined but never used.","'useSelector' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Logout' is defined but never used.","'Component' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["283"],["284"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'CancelIcon' is defined but never used.","'providerCard' is defined but never used.","'GET_PROVIDERS' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'Avatar' is defined but never used.",["283"],["284"],"'CssBaseline' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'red' is defined but never used.","'getComments' is defined but never used.","'Link' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'ProviderTable' is defined but never used.","'signup' is defined but never used.","no-global-assign","no-unsafe-negation"]